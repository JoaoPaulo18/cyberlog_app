// Teste de Notifica√ß√£o Local - Execute este c√≥digo para testar se as notifica√ß√µes locais est√£o funcionando

import * as Notifications from "expo-notifications";
import { Alert } from "react-native";

// Configurar o comportamento das notifica√ß√µes
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: true,
  }),
});

export const testLocalNotification = async () => {
  try {
    // Configurar canal se for Android
    if (Platform.OS === "android") {
      await Notifications.setNotificationChannelAsync("test", {
        name: "Test Channel",
        importance: Notifications.AndroidImportance.MAX,
        vibrationPattern: [0, 250, 250, 250],
        lightColor: "#FF231F7C",
        sound: true,
        enableVibrate: true,
        showBadge: true,
        lockscreenVisibility:
          Notifications.AndroidNotificationVisibility.PUBLIC,
      });
    }

    // Agendar notifica√ß√£o de teste
    await Notifications.scheduleNotificationAsync({
      content: {
        title: "üîî Teste de Notifica√ß√£o",
        body: "Esta √© uma notifica√ß√£o de teste local",
        data: { test: true },
        sound: true,
        priority: Notifications.AndroidImportance.HIGH,
        categoryIdentifier: "test",
      },
      trigger: null, // Mostrar imediatamente
    });

    Alert.alert("Sucesso", "Notifica√ß√£o de teste enviada!");
    console.log("Notifica√ß√£o de teste enviada com sucesso");
  } catch (error) {
    console.error("Erro ao enviar notifica√ß√£o de teste:", error);
    Alert.alert("Erro", "Falha ao enviar notifica√ß√£o: " + error.message);
  }
};

// Para testar, adicione um bot√£o na sua tela que chama testLocalNotification()
// Exemplo:
// <Button title="Testar Notifica√ß√£o Local" onPress={testLocalNotification} />
