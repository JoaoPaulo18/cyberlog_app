# Script de Restaura√ß√£o das Configura√ß√µes Android para Firebase
# Execute este script AP√ìS rodar 'expo prebuild'

Write-Host "üîÑ Iniciando restaura√ß√£o das configura√ß√µes Android..." -ForegroundColor Green

# Definir caminhos
$projectRoot = Split-Path -Parent $PSScriptRoot
$backupDir = "$PSScriptRoot\android_config"
$androidDir = "$projectRoot\android"

# Verificar se existe backup
if (-not (Test-Path $backupDir)) {
    Write-Host "‚ùå Diret√≥rio de backup n√£o encontrado: $backupDir" -ForegroundColor Red
    Write-Host "Execute primeiro o script backup_android_config.ps1" -ForegroundColor Yellow
    exit 1
}

# Verificar se existe diret√≥rio android (deve existir ap√≥s prebuild)
if (-not (Test-Path $androidDir)) {
    Write-Host "‚ùå Diret√≥rio android n√£o encontrado: $androidDir" -ForegroundColor Red
    Write-Host "Execute 'expo prebuild' primeiro" -ForegroundColor Yellow
    exit 1
}

# Fun√ß√£o para restaurar com log
function Restore-File {
    param($Source, $Destination, $Description)
    
    if (Test-Path $Source) {
        $destDir = Split-Path -Parent $Destination
        if (-not (Test-Path $destDir)) {
            New-Item -ItemType Directory -Path $destDir -Force
        }
        Copy-Item -Path $Source -Destination $Destination -Force
        Write-Host "‚úÖ $Description - Restaurado com sucesso" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  $Description - Backup n√£o encontrado: $Source" -ForegroundColor Yellow
    }
}

# Restaurar arquivos
Write-Host "`nüìÅ Restaurando arquivos de configura√ß√£o..." -ForegroundColor Cyan

# Build Gradle (root)
Restore-File "$backupDir\build.gradle" "$androidDir\build.gradle" "Root build.gradle"

# Build Gradle (app)
Restore-File "$backupDir\app_build.gradle" "$androidDir\app\build.gradle" "App build.gradle"

# AndroidManifest.xml
Restore-File "$backupDir\AndroidManifest.xml" "$androidDir\app\src\main\AndroidManifest.xml" "AndroidManifest.xml"

# MainApplication.kt
Restore-File "$backupDir\MainApplication.kt" "$androidDir\app\src\main\java\com\draxS2\cyberlog_app\MainApplication.kt" "MainApplication.kt"

# gradle.properties
Restore-File "$backupDir\gradle.properties" "$androidDir\gradle.properties" "gradle.properties"

# colors.xml
Restore-File "$backupDir\colors.xml" "$androidDir\app\src\main\res\values\colors.xml" "colors.xml"

# .easignore
Restore-File "$backupDir\.easignore" "$projectRoot\.easignore" ".easignore"

# app.json (restaurar apenas se n√£o existir ou se for diferente)
if (Test-Path "$backupDir\app.json") {
    if (Test-Path "$projectRoot\app.json") {
        Write-Host "‚ö†Ô∏è  app.json j√° existe. Verificando diferen√ßas..." -ForegroundColor Yellow
        $currentContent = Get-Content "$projectRoot\app.json" -Raw
        $backupContent = Get-Content "$backupDir\app.json" -Raw
        
        if ($currentContent -ne $backupContent) {
            Write-Host "üìù Diferen√ßas encontradas no app.json" -ForegroundColor Yellow
            Write-Host "Voc√™ pode querer revisar manualmente as configura√ß√µes do Android" -ForegroundColor Yellow
        }
    } else {
        Restore-File "$backupDir\app.json" "$projectRoot\app.json" "app.json"
    }
}

# Verificar timestamp do backup
$timestampFile = "$backupDir\backup_timestamp.txt"
if (Test-Path $timestampFile) {
    $timestamp = Get-Content $timestampFile
    Write-Host "`nüïí $timestamp" -ForegroundColor Gray
}

Write-Host "`nüéâ Restaura√ß√£o conclu√≠da!" -ForegroundColor Green
Write-Host "üì± Agora voc√™ pode fazer o build do app com as configura√ß√µes do Firebase" -ForegroundColor Cyan
Write-Host "üöÄ Execute: eas build --platform android --profile preview" -ForegroundColor Yellow
